# This policy ensures security groups don't allow unrestricted access to SSH
# Resource: awscc_ec2_security_group

import "tfplan/v2" as tfplan
import "strings"

# Get all security groups
get_security_groups = func() {
    resources = filter tfplan.resource_changes as _, rc {
        rc.type is "awscc_ec2_security_group" and
        (rc.change.actions contains "create" or rc.change.actions contains "update")
    }
    return resources
}

# Check for unrestricted SSH access
has_unrestricted_ssh = func(sg) {
    if sg.security_group_ingress is null {
        return false
    }
    
    for sg.security_group_ingress as rule {
        # Check for IPv4 unrestricted access
        if rule.cidr_ip is "0.0.0.0/0" {
            if rule.ip_protocol is "-1" {
                return true
            }
            
            if rule.ip_protocol is "tcp" {
                from_port = rule.from_port
                to_port = rule.to_port
                
                if (from_port <= 22 and to_port >= 22) {
                    return true
                }
            }
        }
        
        # Check for IPv6 unrestricted access
        if rule.cidr_ipv6 is "::/0" {
            if rule.ip_protocol is "-1" {
                return true
            }
            
            if rule.ip_protocol is "tcp" {
                from_port = rule.from_port
                to_port = rule.to_port
                
                if (from_port <= 22 and to_port >= 22) {
                    return true
                }
            }
        }
    }
    return false
}

# Main rule
no_unrestricted_ssh = rule {
    all get_security_groups() as sg {
        not has_unrestricted_ssh(sg.change.after)
    }
}

main = rule {
    no_unrestricted_ssh
}