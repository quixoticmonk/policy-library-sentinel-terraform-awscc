# This policy ensures AWS Security Group does not allow ingress traffic from ::/0 to ports 22 and 3389
import "tfplan/v2" as tfplan
import "tfconfig/v2" as tfconfig
import "strings"

# Get all security group ingress rules
aws_sg_ingress_rules = filter tfplan.resource_changes as _, rc {
    rc.type is "awscc_ec2_security_group_ingress" and
    (rc.change.actions contains "create" or rc.change.actions contains "update")
}

# Rule to validate Security Groups don't allow unrestricted SSH or RDP access via IPv6
validate_sg_ssh_rdp_ipv6 = rule {
    all aws_sg_ingress_rules as _, rule {
        rule.change.after.cidr_ipv6 is not "::/0" or
        (
            rule.change.after.from_port != 22 and 
            rule.change.after.to_port != 22 and
            rule.change.after.from_port != 3389 and
            rule.change.after.to_port != 3389 and
            !(rule.change.after.from_port <= 22 and rule.change.after.to_port >= 22) and
            !(rule.change.after.from_port <= 3389 and rule.change.after.to_port >= 3389)
        )
    }
}

# Reporting function
report_sg_ssh_rdp_ipv6 = func() {
    violations = []
    
    for aws_sg_ingress_rules as address, rule {
        is_public_cidr = rule.change.after.cidr_ipv6 is "::/0"
        
        # Check if port range includes SSH (22) or RDP (3389)
        allows_ssh = (
            rule.change.after.from_port == 22 or
            rule.change.after.to_port == 22 or
            (rule.change.after.from_port <= 22 and rule.change.after.to_port >= 22)
        )
        
        allows_rdp = (
            rule.change.after.from_port == 3389 or
            rule.change.after.to_port == 3389 or
            (rule.change.after.from_port <= 3389 and rule.change.after.to_port >= 3389)
        )
        
        if is_public_cidr and (allows_ssh or allows_rdp) {
            append(violations, address)
        }
    }
    
    return {
        "compliant": length(violations) == 0,
        "violations": violations,
        "message": "Security Groups should not allow ingress traffic from ::/0 to ports 22 (SSH) or 3389 (RDP)."
    }
}

# Main rule that we'll export
main = rule {
    validate_sg_ssh_rdp_ipv6
}