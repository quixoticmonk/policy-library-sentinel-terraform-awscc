# Policy that ensures CloudTrail S3 buckets are not publicly accessible

import "tfplan/v2" as tfplan

# Get all AWS CloudTrail resources
allCloudTrails = filter tfplan.resource_changes as _, rc {
    rc.type is "awscc_cloudtrail_trail" and
    (rc.change.actions contains "create" or rc.change.actions contains "update")
}

# Get all S3 buckets
allS3Buckets = filter tfplan.resource_changes as _, rc {
    rc.type is "awscc_s3_bucket" and
    (rc.change.actions contains "create" or rc.change.actions contains "update")
}

# Find CloudTrail S3 buckets
cloudtrailBuckets = []

for allCloudTrails as _, trail {
    if (keys(trail.change.after) contains "s3_bucket_name") {
        bucketName = trail.change.after.s3_bucket_name
        cloudtrailBuckets = append(cloudtrailBuckets, bucketName)
    }
}

# Check if those buckets have public access blocks
violatingBuckets = []

for allS3Buckets as _, bucket {
    bucketName = bucket.change.after.bucket_name
    
    if bucketName in cloudtrailBuckets {
        # Check if public access is blocked
        if !(keys(bucket.change.after) contains "public_access_block_configuration") {
            violatingBuckets = append(violatingBuckets, bucketName)
        } else {
            publicAccessBlock = bucket.change.after.public_access_block_configuration
            
            # Check all public access block settings
            if !(publicAccessBlock.block_public_acls is true and
                 publicAccessBlock.block_public_policy is true and
                 publicAccessBlock.ignore_public_acls is true and
                 publicAccessBlock.restrict_public_buckets is true) {
                violatingBuckets = append(violatingBuckets, bucketName)
            }
        }
    }
}

# Print report for debugging and reporting
if length(cloudtrailBuckets) > 0 {
    print("CloudTrail S3 Bucket Public Access Check")
    print("=======================================")
    print("CloudTrail S3 Buckets found:", cloudtrailBuckets)
    
    if length(violatingBuckets) > 0 {
        print("Violating buckets (public access not blocked):", violatingBuckets)
    } else {
        print("All CloudTrail S3 buckets have public access blocked.")
    }
}

# Rule compliance
cloudtrail_s3_not_public = length(violatingBuckets) == 0